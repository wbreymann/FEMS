
- Function presentValue:
  * Interface should be streamlined and in better accordance with the value function
  * arg from -> by
  * yield should also accomodate yieldCurve objects and arg yieldCurve should be deprecated
  
- presentValue/value: 
  * check treatment of IPCI events. 
    Should be taken into account in present value computation.
    Sollte schon (weitgehend?) erledigt.
    
- streamline compounding methods for present value computation:
  * Provide yearly, intra-yearly and continuous compounding for functions
    value, presentValue and irr.
    
- Berechnung der Zinsen für angebrochene Perioden

- for function irr:
irr(object, method = "compound", period = "Y", convention = "30E360E", 
       isPercentage=TRUE, ...)
  We can merge method and period into a single argument "period":
  * period = "0" means continuous compounding
  * period = "INF" means "linear"
  
  
- By the way, such conventions should be used by the discount engine.

- Definition von Zeitintervallen:
  * Es gibt das timeSeries 'by' format und das Format, das im Argument 'period' von 
    'irr' benutzt wird. 
    Wir sollten wird uns auf ein Format einigen.
  * Es sollte die Syntax "nP" mit n natürliche Zahl und P=[Y|M|W|D] möglich sein.
  
- presentValue(cashFlows(OpCFs, "2013-12-31"), 5, by="2015-01-01")
  doesn't work as expected.
  
  With the following definition:
  times = timeSequence(from="2014-01-01", by="3 months", length.out=9)
values = cumsum(c(1,rnorm(8,0.02,0.1)))
# Erstellen eines Preisindexes
idx <- Index(label = "PriceIndex", data = values, 
            charvec = times)
# Funktion für den Ertrag
revenue <- function(idx, times) { 
  idx$Data[as.character(times),] * 1000
}
# Modellierung des operativen Zahlungsstromes
OpCFs <- OperationalCF(
  ContractID="Ops001", Currency="CHF",
  pattern = revenue, # die Funktion von oben
  args = list( # Parameter der Funktion
    idx = idx,  
    times = as.character(times)
  )
)

evs <- events(OpCFs, "2013-12-31")

- isPrice doesn't make sense for operational cash flows

- end_date not defined for presentValue

- I wonder whether we should not rename the 'events' function to 'simulate'
  Because this is what it is.
  I know, this is a major change, and the old function should be provided 
  for a certain period but labeld "deprecated"
  
- RiskFactorConnector -> RiskFactorEnv

- Kontrakt CT101 vom Bankenmodell zahlt keine Zinsen. (Siehe HA2)

- Suggestion:
  Replace the function "events" by "simulate".
  I think it's more intuitive.
  The arguments remain the same, but be should add the following argument:
  type = ["single"|"mc"] (default: "single")
  rule = FUN (must be specified if type="mc"). 
      The function FUN generates the mc scenearios.
  ...: arguments passed to FUN.
  
- MC simulation:
  The simulation command should work as sketched above.
  The results are stored in the institution object (i.e., the data.tree)
  The analysis commands should be extended such that they work with the whole mc sample
  An then we need easy commands to extract the distribution (i.e., the computed sample)
  for different analytical quantities, 
  and also an easy way to compute Value-at-Risk and Expected Shortfall.
  
- Help vervollständigen