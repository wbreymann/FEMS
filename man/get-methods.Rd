% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ContractModel.R, R/RiskFactorConnector.R,
%   R/ContractType.R, R/YieldCurve.R, R/DiscountingEngine.R, R/Portfolio.R,
%   R/EventSeries.R, R/YieldCurve2.R, R/CapmEngine.R, R/ForeignExchangeRate.R,
%   R/PortfolioTree.R, R/ReferenceIndex.R
\docType{methods}
\name{get}
\alias{get}
\alias{get,ContractType,character-method}
\alias{get,YieldCurve,character-method}
\alias{get,ReferenceIndex,character-method}
\alias{get,ForeignExchangeRate,character-method}
\alias{get,ValuationEngineModel,character-method}
\alias{get,jobjRef,character-method}
\alias{get,ContractModel,character-method}
\alias{get,RiskFactorConnector,character-method}
\alias{get-method}
\alias{get,DiscountingEngine,character-method}
\alias{get,ValuationEngine,character-method}
\alias{get,Portfolio,character-method}
\alias{get,}
\alias{PortfolioFast,character-method}
\alias{PortfolioResults,character-method}
\alias{get,EventSeries,character-method}
\alias{get,YieldCurve2,character-method}
\alias{get,CAPMEngine,character-method}
\alias{get,PortfolioTree,character-method}
\title{Generic method to return the value of certain term(s) or
parameter(s) of an ACTUS object}
\usage{
get(object, what, ...)

\S4method{get}{ContractModel,character}(object, what)

\S4method{get}{RiskFactorConnector,character}(object, what)

\S4method{get}{ContractType,character}(object, what)

\S4method{get}{YieldCurve,character}(object, what, ...)

\S4method{get}{DiscountingEngine,character}(object, what)

\S4method{get}{Portfolio,character}(object, what, ...)

\S4method{get}{EventSeries,character}(object, what)

\S4method{get}{YieldCurve2,character}(object, what, ...)

\S4method{get}{CAPMEngine,character}(object, what)

\S4method{get}{ForeignExchangeRate,character}(object, what, ...)

\S4method{get}{PortfolioTree,character}(object, what)

\S4method{get}{ReferenceIndex,character}(object, what, ...)
}
\arguments{
\item{object}{A \code{PortfolioTree}-object}

\item{what}{A character (-vector) specifying the names of fields to return values for}

\item{...}{}
}
\value{
A single element or vector of elements representing
       the values of the requested terms

an object of class \code{\link{RiskFactor}} with 
       'MarketObjectCode'=\code{what} parameter

The respective field or other information element

A list of values of the specified fields
}
\description{
Implemented e.g. for \code{\link{ContractModel}} where 
\code{get} returns the value of defined contract term(s) or 
for \code{\link{RiskFactor}}, \code{\link{ValuationModel}}, 
and whatever object of this package that is carrying 
parameters.
Note that argument \code{what} has to refer to the exact
names of the terms or parameters to retrieve. Whenever 
possible, the method converts the values to an R data
format before returning. However, some terms (e.g.
DayCountConvention for a PrincipalAtMaturity) cannot be
converted why the Java reference is returned.

Each element of the \code{what} parameter is expected to
point to an element in the \code{RiskFactorConnector} by
their 'keys'. All elements that can be found in
\code{RiskFactorConnector} are returned.

Allows to retrieve certain information of a portfolio. In 
particular, this is a convenience function to access the 
Reference Class's fields. Further, using \code{what='size'}
the number of contracts in the Portfolio is returned, for
\code{what='ids'} a vector of \code{ContractID} ContractTerms
of the contracts is returned, and if \code{what=[ContractID]}
with \code{[ContractID]} the ContractID of a particular 
contract in the portfolio then the respective contract is 
returned.

A convenience-wrapper to access values of the fields of a
\code{PortfolioTree}.
}
\examples{
pam = Pam()
terms(pam) # get all term names
get(pam, what="NotionalPrincipal") # return value is numeric
get(pam, what="DayCountConvention") # Java reference is returned

yc <- YieldCurve() # create a YieldCurve object
tenors <- c("1W", "1M", "6M", "1Y", "2Y", "5Y")
rates <- c(0.001, 0.0015, 0.002, 0.01, 0.02, 0.03)
set(yc, what = list(MarketObjectCode = "YC_Prim",
    Nodes = list(ReferenceDate = "2015-01-01", 
    Tenors = tenors, Rates = rates)))

ind <- Index() # create a ReferenceIndex object
times <- c("2015-01-01", "2016-01-01", "2017-01-01", "2018-01-01",
           "2019-01-01")
values <- c(100, 110, 120, 130, 140)
set(ind, what=list(MarketObjectCode = "CHF_SMI",
    Data=list(Dates=times,Values=values)))
    
rf <- RFConn() # create a RiskFactorConnector object
add(rf,list(yc,ind)) # add all risk factors to the RiskFactorConnector
get(rf, "YC_Prim")

# define analysis data
ad <- "2015-01-02T00"

# construct portfolio
data(BondPortfolio)
ptf <- Portfolio()
import(ptf,BondPortfolio, valuationEngines=TRUE)

# retrieve list of contracts
class(get(ptf, what="contracts"))

# retrieve portfolio size (number of contracts)
get(ptf, what="size")

# retrieve ids of contracts in portfolio
get(ptf, what="ids")

# retrieve contract with specific id
get(ptf, what="110")

tree=Tree()
get(tree,what="leafs")
set(tree, what=list(leafs=list(L1=c(1001,1002),L2=c(1003,1004))))
get(tree,what="leafs")

}
\seealso{
\code{\link{terms,set}}

add, remove

\code{\link{set}}

\link{set}
}
