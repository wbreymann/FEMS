% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ContractType.R, R/Annuity.R,
%   R/ExoticLinearAmortizer.R, R/ForeignExchangeOutright.R, R/Future.R,
%   R/LinearAmortizer.R, R/NegativeAmortizer.R, R/Operations.R, R/Option.R,
%   R/PrincipalAtMaturity.R, R/Stock.R, R/Swap.R
\docType{methods}
\name{CT}
\alias{CT}
\alias{CT,jobjRef-method}
\alias{CT,character-method}
\alias{terms,ContractType-method}
\alias{terms,ContractModel-method}
\alias{terms,ValuationEngine-method}
\alias{terms,jobjRef-method}
\alias{Ann}
\alias{Ann,ANY-method}
\alias{Annuity}
\alias{Annuity,ANY-method}
\alias{Lax}
\alias{Lax,ANY-method}
\alias{ExoticLinearAmortizer}
\alias{ExoticLinearAmortizer,ANY-method}
\alias{Fxout}
\alias{Fxout,ANY-method}
\alias{ForeignExchangeOutright}
\alias{ForeignExchangeOutright,ANY-method}
\alias{Futur}
\alias{Futur,ANY-method}
\alias{Lam}
\alias{Lam,ANY-method}
\alias{LinearAmortizer}
\alias{LinearAmortizer,ANY-method}
\alias{Nam}
\alias{Nam,ANY-method}
\alias{NegativeAmortizer}
\alias{NegativeAmortizer,ANY-method}
\alias{OperationalCF,ANY-method}
\alias{Investments,ANY-method}
\alias{Reserves,ANY-method}
\alias{Optns}
\alias{Optns,ANY-method}
\alias{Option}
\alias{Option,ANY-method}
\alias{Pam}
\alias{Pam,ANY-method}
\alias{PrincipalAtMaturity}
\alias{PrincipalAtMaturity,ANY-method}
\alias{Stk}
\alias{Stk,ANY-method}
\alias{Stock}
\alias{Stock,ANY-method}
\alias{Swaps}
\alias{Swaps,ANY-method}
\title{\code{ContractType}-class constructor}
\usage{
CT(contract_name)

\S4method{CT}{character}(contract_name)

\S4method{terms}{ContractType}(object)

Ann(...)

\S4method{Ann}{ANY}(
  ContractID = "001",
  ContractRole = "RPA",
  StatusDate = "0000-01-01",
  PremiumDiscountAtIED = 0,
  DayCountConvention = "30E360",
  ...
)

Annuity(...)

\S4method{Annuity}{ANY}(...)

Lax(...)

\S4method{Lax}{ANY}(...)

ExoticLinearAmortizer(...)

\S4method{ExoticLinearAmortizer}{ANY}(...)

Fxout(...)

\S4method{Fxout}{ANY}(...)

ForeignExchangeOutright(...)

\S4method{ForeignExchangeOutright}{ANY}(...)

Futur(...)

\S4method{Futur}{ANY}(...)

Lam(...)

\S4method{Lam}{ANY}(
  ContractID = "001",
  ContractRole = "RPA",
  StatusDate = "0000-01-01",
  PremiumDiscountAtIED = 0,
  DayCountConvention = "30E360",
  ...
)

LinearAmortizer(...)

\S4method{LinearAmortizer}{ANY}(...)

Nam(...)

\S4method{Nam}{ANY}(...)

NegativeAmortizer(...)

\S4method{NegativeAmortizer}{ANY}(...)

\S4method{OperationalCF}{ANY}(...)

\S4method{Investments}{ANY}(...)

\S4method{Reserves}{ANY}(...)

Optns(...)

\S4method{Optns}{ANY}(...)

Option(...)

\S4method{Option}{ANY}(...)

Pam(...)

\S4method{Pam}{ANY}(
  ContractID = "001",
  ContractRole = "RPA",
  StatusDate = "0000-01-01",
  PremiumDiscountAtIED = 0,
  DayCountConvention = "30E360",
  ...
)

PrincipalAtMaturity(...)

\S4method{PrincipalAtMaturity}{ANY}(...)

Stk(...)

\S4method{Stk}{ANY}(...)

Stock(...)

\S4method{Stock}{ANY}(...)

Swaps(...)

\S4method{Swaps}{ANY}(...)
}
\arguments{
\item{object}{If an object of class \code{jobjRef}, then 
this parameter is expected to be a reference to a Java
contract and a new R-object of the same class is 
created and the Java reference attached as the classes'
\code{jref}-field. If a character, then \code{object}
is expected to be the R-class name of the contract to
be instantiated.}
}
\value{
An object of a class extending \code{ContractType}
}
\description{
Create an instance of an implementation of class 
\code{ContractType} (e.g. \code{\link{PrincipalAtMaturity}},
\code{\link{Stock}}, etc). 
This constructor is in fact a short cut to the constructors
of the implemented classes such as \code{\link{Pam}} for 
\code{\link{PrincipalAtMaturity}}, \code{\link{Ann}} for 
\code{\link{Annuity}} or \code{\link{Stk}} for 
\code{\link{Stock}}. Note that it is not possible to
instanciate class \code{ContractType} itself but only the
implementing classes extending \code{ContractType}.
}
\examples{
# example 1: create a new 'PAM' object
pam = CT("PrincipalAtMaturity")

# example 2: attach the reference to a Java 'PAM' object to
#            a new R-'PAM' object. Note, the new object will
#            refer to the same Java contract.
pam = Pam()
set(pam, what=list(
                   ContractID = "001",
                   Currency = "CHF",
                   ContractRole = "RPA",
                   StatusDate       = "2012-12-31T00",
                   ContractDealDate = "2012-12-31T00",
                   InitialExchangeDate = "2013-01-01T00",
                   MaturityDate = "2013-03-31T00",
                   NotionalPrincipal = 1000, 
                   NominalInterestRate = 0.01,
                   DayCountConvention = "30E/360"))
same.pam = CT(pam$jref)

}
\seealso{
\code{\link{Pam, PrincipalAtMaturity}}
}
